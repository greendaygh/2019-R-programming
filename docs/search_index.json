[
["index.html", "[2019 UST 일반강의] R 프로그래밍과 데이터 분석 Lecture 1 Intro 개요 1.1 Goal 강의 목표 1.2 References 참고 자료 1.3 Evaluation 평가 세부 항목 1.4 Schedule 강의 계획 1.5 Lecture note 강의 자료", " [2019 UST 일반강의] R 프로그래밍과 데이터 분석 Haseong Kim 2019-03-29 Lecture 1 Intro 개요 장소: 한국생명공학연구원 연구동 세미나실 1213호 (매주수요일 13:00~16:00) 강사: 한국생명공학연구원 바이오합성연구센터 김하성 연락처: 042-860-4372, haseong@kribb.re.kr (생명연 연구동 1143) 1.1 Goal 강의 목표 이공계열 대학원생이 통계 분석용 범용 프로그램 언어인 R의 사용법을 익히고 이를 이용한 프로그래밍 기술의 습득을 주요 목적으로 함. 생물 데이터 위주의 분석 예제를 통해 R의 활용 기술을 배움. 이 강좌는 오프라인 강의를 기본으로 함. R 사용에 대한 기본 개념과 프로그래밍을 중심으로 필요시 기초 통계지식 강의. 실습 데이터로는 주로 생물데이터를 사용함. 모든 강의 시간 실습을 위한 개인 노트북 지참 필수. 강의 자료는 pdf로 제작하여 수업 진행과 관련된 정보와 함께 웹사이트를 통해 배포됨. 상황에 따라 강의 일정이 조정될 수 있음. 1.2 References 참고 자료 R for Data Science (https://r4ds.had.co.nz, https://github.com/hadley) Using R for Introductory Statistics by John Verzani Free version of 1st Edition https://cran.r-project.org/doc/contrib/Verzani-SimpleR.pdf http://cbb.sjtu.edu.cn/~mywu/bi217/usingR.pdf Second edition https://www.crcpress.com/Using-R-for-Introductory-Statistics-Second-Edition/Verzani/p/book/9781466590731 Bioinformatics Data Skills by Vince Buffalo https://resources.rstudio.com/ 일반통계학 (영지문화사, 김우철 외) 1.3 Evaluation 평가 세부 항목 출석 50% / 과제 50% / 수업참여 +alpha 1.4 Schedule 강의 계획 Introduction and installation of R/Rstudio R language basics Data manipulation Visualizing data in R Shiny for interactive applications in R Workflows with R scripts Working with Range Data Sequence analysis Clustering and significance testing with genomic data 1.5 Lecture note 강의 자료 1 (2019.03.06) - Introduction and installation of R/Rstudio, Basics of variables and functions 2 (2019.03.13) - R Basics - Objects (vector, factor, matrix) and functions 다음 시간 readxl, Biostrings 두 패키지 미리 설치한 후 강의 참석 부탁드립니다. 3 (2019.03.20) - R Basics II - file I/O 강의가 좀 빠르게 진행된 듯 합니다. 기본으로 제공되는 R 기능을 사용하기 보다는 함수나 프로그래밍 코딩 원리를 이해하기 위해 직접 함수를 만들어보는 연습을 하고 있으니 참고 하시고 다음 시간 전에 이번 시간 코드 복습하시고 오시면 도움이 되실 것 같습니다. 4 (2019.03.27) - R programming example - Maze Robot "],
["r-programming-introduction.html", "Lecture 2 R programming introduction", " Lecture 2 R programming introduction "],
["r-basics-i.html", "Lecture 3 R basics I", " Lecture 3 R basics I "],
["r-basics-ii.html", "Lecture 4 R Basics II 4.1 matrix (행렬) 4.2 data.frame 4.3 list 4.4 File 읽기/쓰기 4.5 Excel file 읽기/쓰기", " Lecture 4 R Basics II 4.1 matrix (행렬) 매트릭스에 값을 저장하거나 참조할때 (빼올때) 사용하는 인덱싱 방법입니다. 콤마로 구분된 대괄호 안에 앞쪽은 row, 뒷쪽은 column 인덱스를 나타내며 row 또는 column에 해당하는 어느쪽에 아무 값도 넣지 않을 경우 그 row 또는 column 전체를 참조하게 됩니다. mymat &lt;- matrix(0, nrow=100, ncol=3) # 1 mymat[,1] &lt;- 1:100 # 2 mymat[,2] &lt;- seq(1,200,2) # 3 mymat[,3] &lt;- seq(2,200,2) # 4 여러 row나 column을 참조할 경우 아래와 같이 combine 함수를 사용하여 묶어줘야 하며 스칼라값을 더하거나 뺄 경우 vector / matrix 연산을 기본으로 수행합니다. mymat[c(2,3,4,5),2] # 5 mymat-1 # 6 mysub &lt;- mymat[,2] - mymat[,1] #7 sum(mysub) #8 sum(mysub^2) #8 4.2 data.frame 데이터프레임은 변수의 모임으로 형태는 매트릭스와 같으나 $ 기호를 이용하여 각 구성 변수를 참조할 수 있다는 점이 다릅니다. 또한 데이터프레임 또는 매트릭스의 row나 column에 이름이 주어져 있을 경우 이름을 따옴표(“)로 묶은 후 참조가 가능합니다. ## data.frame ids &lt;- 1:10 ids idnames &lt;- paste(&quot;Name&quot;, ids, sep=&quot;&quot;) idnames students &lt;- data.frame(ids, idnames) students class(students$ids) class(students$idnames) students$idnames students &lt;- data.frame(ids, idnames, stringsAsFactors = F) class(students$idnames) students$idnames students[1,] ## data frame indexing students$ids students[,1] students[,&quot;ids&quot;] 4.3 list 리스트는 변수들의 모임이라는 점에서 데이터프레임과 같으나 구성 변수들의 길이가 모두 같아야 하는 데이터프레임과는 달리 다른 길이의 변수를 모아둘 수 있는 점이 다릅니다. 리스트는 아래와 같이 대괄호 두 겹을 이용해 인덱싱을 합니다. ## list parent_names &lt;- c(&quot;Fred&quot;, &quot;Mary&quot;) number_of_children &lt;- 2 child_ages &lt;- c(4, 7, 9) data.frame(parent_names, number_of_children, child_ages) lst &lt;- list(parent_names, number_of_children, child_ages) lst[1] lst[[1]] class(lst[1]) class(lst[[1]]) lst[[1]][1] lst[[1]][c(1,2)] 4.4 File 읽기/쓰기 텍스트 파일의 경우 아래와 같이 csv 또는 txt 파일로 저장하여 메모장으로 열어 확인할 수 있으며 읽어올 경우 구분자 (sep 파라메터) 나 header를 (header 파라메터) 읽을지 읽지 않을지 등을 옵션으로 지정할 수 있습니다. x &lt;- c(1,2,3,4) y &lt;- c(5,6,7,8) xy&lt;-data.frame(x=x, y=y) write.table(xy, file=&quot;table_write.txt&quot;) write.table(xy, file=&quot;table_write.txt&quot;, quote=F) write.table(xy, file=&quot;table_write.txt&quot;, quote=F, row.names=F) write.table(xy, file=&quot;table_write.txt&quot;, quote=F, row.names=F, sep=&quot;,&quot;) write.table(xy, file=&quot;table_write.csv&quot;, quote=F, row.names=F, sep=&quot;,&quot;) mydata&lt;-read.table(file=&quot;table_write.csv&quot;) mydata&lt;-read.table(file=&quot;table_write.csv&quot;, sep=&quot;,&quot;) mydata&lt;-read.table(file=&quot;table_write.csv&quot;, sep=&quot;,&quot;, header=T) plot(mydata$x, mydata$z) 4.5 Excel file 읽기/쓰기 엑셀파일은 readxl 이라는 R 패키지를 활용하여 읽거나 쓸 수 있습니다. install.packages(&quot;readxl&quot;) 실습 파일은 형광 세포를 배양하여 형광리더기를 이용해 얻어진 실제 데이터이며 Rprog04-fl.xls 에서 다운로드 받을 수 있습니다. read_excel 함수를 이용하여 파일의 내용을 읽어오면 기본 자료형이 tibble 입니다. tibble은 최근 많이 쓰이는 R object로 data.frame과 유사하나 입력값의 type, name, rowname을 임으로 바꿀 수 없다는 점이 다릅니다. tibble에 익숙해지는 것이 좋으나 본 강의에서는 직관적인 진행을 위하여 data.frame으로 전환하여 사용하겠습니다. library(readxl) ## Warning: package &#39;readxl&#39; was built under R version 3.5.3 mydata &lt;- read_excel(&quot;Rprog04-fl.xls&quot;, sheet=2, skip = 6, col_names=F) ## New names: ## * `` -&gt; `..1` ## * `` -&gt; `..2` ## * `` -&gt; `..3` ## * `` -&gt; `..4` ## * `` -&gt; `..5` ## * ... and 7 more myod &lt;- as.data.frame(mydata[1:8, ]) mygfp &lt;- as.data.frame(mydata[12:21, ]) class(myod[,1]) class(myod[,2]) 엑셀파일에는 두 종류의 (OD600nm, fluorescence) 데이터가 저장되어 있으며 각각을 위에서 1~8 row 그리고 12~21 row 값들을 모두 myod와 mygfp로 저장했습니다. 그러나 엑셀파일을 보면 첫번째 컬럼에 관측값 외에 다른 정보들에 대한 텍스트가 적혀 있으며 이로 인해 행렬의 가장 첫 컬럼의 데이터 타입이 character가 되고 나머지 컬럼은 numeric으로 자동 전환 되어 data.frame 오브젝트인 mydata에 저장되게 됩니다. 따라서 아래와 같이 문자형을 숫자형으로 전환하여 추후 연산을 진행하게 됩니다. myod[,1] &lt;- as.numeric(myod[,1]) mygfp[,1] &lt;- as.numeric(mygfp[,1]) 수행한 실험의 디자인에 따라서 두 그룹으로 나누고 적절한 이름을 저장합니다. myod_treat &lt;- myod[2:4,] myod_control &lt;- myod[5:7,] sample_names &lt;- paste(&quot;Sample&quot;, c(1:12), sep=&quot;&quot;) replicate_labels &lt;- paste(&quot;Rep&quot;, c(1:3), sep=&quot;&quot;) rownames(myod_treat) &lt;- replicate_labels colnames(myod_treat) &lt;- sample_names rownames(myod_control) &lt;- replicate_labels colnames(myod_control) &lt;- sample_names mean_treat &lt;- colMeans(myod_treat) mean_control &lt;- colMeans(myod_control) 본 실습에서는 각 그룹의 평균을 비교하는 막대그래프를 그려보겠습니다. plot(mean_treat, type=&quot;h&quot;) barplot(mean_treat, ylim=c(0,1)) mean_test &lt;- data.frame(mean_treat, mean_control) barplot(t(mean_test), ylim=c(0,1), beside=T) "]
]
